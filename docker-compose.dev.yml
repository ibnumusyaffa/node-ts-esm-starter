version: "3"

services:
  app:
    container_name: starterts_app
    image: starter-ts:latest
    build:
      context: .
      dockerfile: docker/image.dockerfile
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: "sh -c './docker/entrypoint.dev.sh'"
    ports:
      - 3000:3000
    volumes:
      - .:/app
    networks:
      - starterts_network
  
  mysql:
    container_name: starterts_mysql
    image: mysql:8.0.27
    ports:
      - 33006:3306
    volumes:
      - db-storage:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=starterts
    networks:
      - starterts_network
    healthcheck:
      test: mysqladmin ping -h localhost
  
  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: "starterts_rabbitmq"
    volumes:
      - rabbitmq-storage:/var/lib/rabbitmq
    ports:
      - "56703:5672" # Port RabbitMQ
      - "15673:15672" # Port RabbitMQ Management Web UI
    networks:
      - starterts_network
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  
  redis:
    image: "redis:latest"
    container_name: "starterts_redis"
    ports:
      - "63709:6379"
    volumes:
      - redis-storage:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - starterts_network

networks:
  starterts_network:
    driver: bridge

volumes:
  db-storage:
  redis-storage:
  rabbitmq-storage: